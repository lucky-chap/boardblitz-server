 name: BoardBlitz Server CI/CD

 # Trigger the workflow on pushes to the "main" branch
 on:
   push:
     branches: [ "main" ]

 jobs:
   build:

     # This job runs on a self-hosted runner, in this case, your EC2 instance
     runs-on: self-hosted

     steps:
     # Step 1: Checkout the latest code from the GitHub repository
     - uses: actions/checkout@v4

     # Step 2: Setup Node.js environment using the specified version (e.g., 20.x)
     - name: Use Node.js 20.x
       uses: actions/setup-node@v3
       with:
         node-version: '20.x'  # Specify Node.js version
         cache: 'npm'          

     # Step 3: Install dependencies
     - run: npm ci

     # Step 4: Set up the environment variables by creating a .env file
     #         Secrets stored in GitHub will be used in the production environment
     - run: |
         cat <<EOF > .env
         COMMON_RATE_LIMIT_MAX_REQUESTS=${{ secrets.COMMON_RATE_LIMIT_MAX_REQUESTS }}
         COMMON_RATE_LIMIT_WINDOW_MS=${{ secrets.COMMON_RATE_LIMIT_WINDOW_MS }}
         CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
         DB_HOST=${{ secrets.DB_HOST }}
         DB_NAME=${{ secrets.DB_NAME }}
         DB_PASSWORD=${{ secrets.DB_PASSWORD }}
         DB_PORT=${{ secrets.DB_PORT }}
         DB_USER=${{ secrets.DB_USER }}
         HOST=${{ secrets.HOST }}
         PORT=${{ secrets.PORT }}
         NODE_ENV=${{ secrets.NODE_ENV }}
         SESSION_SECRET=${{ secrets.SESSION_SECRET }}
         EOF
         chmod 600 .env

     # Step 5: Build the project (only if a build script is present in package.json)
     - run: npm run build --if-present

     # Step 6: This step you have to update after setting up the nodejs application on ec2 instance
     #  Restart the Node.js app using PM2 for zero-downtime deployment
     - run: pm2 restart app
